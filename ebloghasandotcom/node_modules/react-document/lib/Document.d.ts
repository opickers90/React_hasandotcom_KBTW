/// <reference types="react" />
import * as React from 'react';
import * as PropTypes from 'prop-types';
export interface DocumentProps {
    htmlProps?: {
        [key: string]: string;
    };
    bodyProps?: {
        [key: string]: string;
    };
    children?: string;
    title?: string;
    viewport?: string;
    head?: React.ReactElement<any>[];
    footer?: React.ReactElement<any>[];
    css?: string[];
    js?: string[];
    appMountId?: string;
    app?: string;
    window?: {
        [key: string]: any;
    };
}
export declare const documentPropTypes: {
    htmlProps: PropTypes.Requireable<any>;
    bodyProps: PropTypes.Requireable<any>;
    children: PropTypes.Requireable<any>;
    title: PropTypes.Requireable<any>;
    viewport: PropTypes.Requireable<any>;
    head: PropTypes.Requireable<any>;
    footer: PropTypes.Requireable<any>;
    css: PropTypes.Requireable<any>;
    js: PropTypes.Requireable<any>;
    appMountId: PropTypes.Requireable<any>;
    app: PropTypes.Requireable<any>;
    window: PropTypes.Requireable<any>;
};
declare class Document extends React.Component<DocumentProps, any> {
    static childContextTypes: {
        documentProps: PropTypes.Validator<any>;
    };
    static propTypes: {
        htmlProps: PropTypes.Requireable<any>;
        bodyProps: PropTypes.Requireable<any>;
        children: PropTypes.Requireable<any>;
        title: PropTypes.Requireable<any>;
        viewport: PropTypes.Requireable<any>;
        head: PropTypes.Requireable<any>;
        footer: PropTypes.Requireable<any>;
        css: PropTypes.Requireable<any>;
        js: PropTypes.Requireable<any>;
        appMountId: PropTypes.Requireable<any>;
        app: PropTypes.Requireable<any>;
        window: PropTypes.Requireable<any>;
    };
    getChildContext(): {
        documentProps: any;
    };
    static defaultProps: {
        app: string;
        appMountId: string;
        viewport: string;
    };
    render(): JSX.Element;
}
export default Document;
